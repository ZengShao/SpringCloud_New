<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.shiro.dao.SysPermissionMapper" >
  <resultMap id="BaseResultMap" type="com.zking.shiro.model.SysPermission" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="available" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="parent_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="parent_ids" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="permission" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="resource_type" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="url" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="icon" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <resultMap id="row" type="com.zking.shiro.model.SysPermission" >
    <id column="id"  property="id"  jdbcType="INTEGER" javaType="java.lang.Integer"/>
    <result column="available" property="available" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="name" property="name"  jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="parent_id"  property="parentId"  jdbcType="BIGINT" javaType="java.lang.Long"/>
    <result column="parent_ids"  property="parentIds"  jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="permission"  property="permission" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="resource_type"  property="resourceType" jdbcType="CHAR" javaType="java.lang.String"/>
    <result column="url"  property="url" jdbcType="VARCHAR" javaType="java.lang.String"/>
    <result column="icon"  property="icon" jdbcType="VARCHAR" javaType="java.lang.String"/>
  </resultMap>

  <sql id="Base_Column_List" >

    id, available, name, parent_id, parent_ids, permission, resource_type, url
  </sql>

  <select id="listPermissionsByUserName" parameterType="com.zking.shiro.model.UserInfo" resultMap="row">
    select distinct p.id,p.name,p.url,p.parent_id,p.icon,parent_ids,permission,resource_type
    from user_info u inner join sys_user_role ur on u.uid = ur.uid inner join sys_role r on ur.role_id = r.id
    inner join sys_role_permission rp on r.id = rp.role_id inner join sys_permission p on rp.permission_id = p.id
    where r.available = 1 and p.available = 1 and p.id = rp.permission_id and p.parent_id =3 and u.uid=#{uid,jdbcType=INTEGER}
  </select>

  <select id="listPermissionsByUserName1" resultMap="row" parameterType="com.zking.shiro.model.UserInfo">
    select distinct p.id,p.name,p.url,p.parent_id,p.icon,parent_ids,permission,resource_type
    from user_info u inner join sys_user_role ur on u.uid = ur.uid inner join sys_role r on ur.role_id = r.id
    inner join sys_role_permission rp on r.id = rp.role_id inner join sys_permission p on rp.permission_id = p.id
    where r.available = 1 and p.available = 1 and p.id = rp.permission_id and p.parent_id =2 and u.uid=#{uid,jdbcType=INTEGER}
  </select>

  <select id="listPermissionsByUserName2" resultMap="row" parameterType="com.zking.shiro.model.UserInfo">
    select distinct p.id,p.name,p.url,p.parent_id,p.icon,parent_ids,permission,resource_type
    from user_info u inner join sys_user_role ur on u.uid = ur.uid inner join sys_role r on ur.role_id = r.id
    inner join sys_role_permission rp on r.id = rp.role_id inner join sys_permission p on rp.permission_id = p.id
    where r.available = 1 and p.available = 1 and p.id = rp.permission_id and p.parent_id =3 and u.uid=#{uid,jdbcType=INTEGER}
  </select>

  <select id="listPermissionsByUserName11" resultMap="row">
     select distinct p.id,p.name,p.url,p.parent_id,p.icon,parent_ids,permission,resource_type
    from user_info u inner join sys_user_role ur on u.uid = ur.uid inner join sys_role r on ur.role_id = r.id
      inner join sys_role_permission rp on r.id = rp.role_id inner join sys_permission p on rp.permission_id = p.id
    where r.available = 1 and p.available = 1 and p.parent_id =1
  </select>

  <select id="listRolesByUserName" resultMap="row" parameterType="com.zking.shiro.model.UserInfo">
    select distinct r.role,r.id,r.available,r.description
    from user_info u inner join sys_user_role ur on u.uid = ur.uid inner join sys_role r on ur.role_id = r.id
    where r.available = 1 and u.uid =  #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sys_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPermission"  resultMap="row">
    SELECT * from sys_permission where parent_id = 1
  </select>
  <select id="selectByPermissions"  resultMap="row" parameterType="java.lang.Integer">
     SELECT * from sys_permission where parent_ids = #{parentIds,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zking.shiro.model.SysPermission" >
    insert into sys_permission (id, available, name,
      parent_id, parent_ids, permission,
      resource_type, url)
    values (#{id,jdbcType=INTEGER}, #{available,jdbcType=BIT}, #{name,jdbcType=VARCHAR},
      #{parentId,jdbcType=BIGINT}, #{parentIds,jdbcType=VARCHAR}, #{permission,jdbcType=VARCHAR},
      #{resourceType,jdbcType=CHAR}, #{url,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zking.shiro.model.SysPermission" >
    insert into sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="available != null" >
        available,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="parentIds != null" >
        parent_ids,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="resourceType != null" >
        resource_type,
      </if>
      <if test="url != null" >
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=CHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.shiro.model.SysPermission" >
    update sys_permission
    <set >
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="parentIds != null" >
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        resource_type = #{resourceType,jdbcType=CHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.shiro.model.SysPermission" >
    update sys_permission
    set available = #{available,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
3/5+ 7      parent_ids = #{parentIds,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=CHAR},
      url = #{url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>